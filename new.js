// Generated by CoffeeScript 2.7.0
var ambience, bank, bankButton, bankBuyable, bankBuying, bankCost, bankCount, bankCountElement, bankImage, bankPriceElement, bankRate, bankUnBuyable, bun, bunButton, bunBuyable, bunBuying, bunCost, bunCount, bunCountElement, bunImage, bunPriceElement, bunRate, bunUnBuyable, checkBuyables, clickCount, clickCountElement, crispButton, crispCost, dad, dadButton, dadBuyable, dadBuying, dadCost, dadCount, dadCountElement, dadImage, dadPriceElement, dadRate, dadUnBuyable, dogFarmButton, dogFarmCost, dogFarmCount, dogFarmCountElement, dogFarmRate, facButton, facBuyable, facBuying, facCost, facCount, facCountElement, facImage, facPriceElement, facRate, facUnBuyable, factory, farm, farmBuyable, farmBuying, farmImage, farmPriceElement, farmUnBuyable, grill, grillButton, grillBuyable, grillBuying, grillCost, grillCount, grillCountElement, grillImage, grillPriceElement, grillRate, grillUnBuyable, hotdogButton, increment, mustardButton, mustardCost, passiveClicks, passiveClicksElement, tSauceButton, tSauceCost;

grill = new Audio('designed-fire-winds-swoosh-04-116788.mp3');

bun = new Audio('crunch-crispy-breadbun-41340.mp3');

dad = new Audio('dad-says-yummy-113126.mp3');

farm = new Audio('zapsplat_impacts_hit_loose_ground_dirt_impact_collapse_fall_013_102682.mp3');

factory = new Audio('some-kind-of-machine-103152.mp3');

bank = new Audio('cash-register-purchase-87313.mp3');

ambience = new Audio('https://kotlinc.github.io/hotdog-clicker/Hotdog-Clicker-Ambience.m4a');

ambience.loop = true;

bunBuyable = 'https://kotlinc.github.io/hotdog-clicker/Can-Buy-Bun-Button.svg';

bunUnBuyable = 'https://kotlinc.github.io/hotdog-clicker/Cant-Buy-Bun-Button.svg';

bunBuying = 'https://kotlinc.github.io/hotdog-clicker/Buying-Bun-Button.svg';

dadBuyable = 'https://kotlinc.github.io/hotdog-clicker/Can-Buy-Dad-Button.svg';

dadUnBuyable = 'https://kotlinc.github.io/hotdog-clicker/Cant-Buy-Dad-Button.svg';

dadBuying = 'https://kotlinc.github.io/hotdog-clicker/Buying-Dad-Button.svg';

grillBuyable = 'https://kotlinc.github.io/hotdog-clicker/Can-Buy-Grill-Button.svg';

grillUnBuyable = 'https://kotlinc.github.io/hotdog-clicker/Cant-Buy-Grill-Button.svg';

grillBuying = 'https://kotlinc.github.io/hotdog-clicker/Buying-Grill-Button.svg';

farmBuyable = 'https://kotlinc.github.io/hotdog-clicker/Can-Buy-Farm-Button.svg';

farmUnBuyable = 'https://kotlinc.github.io/hotdog-clicker/Cant-Buy-Farm-Button.svg';

farmBuying = 'https://kotlinc.github.io/hotdog-clicker/Buying-Farm-Button.svg';

facBuyable = 'https://kotlinc.github.io/hotdog-clicker/Can-Buy-Fac-Button.svg';

facUnBuyable = 'https://kotlinc.github.io/hotdog-clicker/Cant-Buy-Fac-Button.svg';

facBuying = 'https://kotlinc.github.io/hotdog-clicker/Buying-Fac-Button.svg';

bankBuyable = 'https://kotlinc.github.io/hotdog-clicker/Can-Buy-Bank-Button.svg';

bankUnBuyable = 'https://kotlinc.github.io/hotdog-clicker/Cant-Buy-Bank-Button.svg';

bankBuying = 'https://kotlinc.github.io/hotdog-clicker/Buying-Bank-Button.svg';

passiveClicks = 0;

clickCount = 0;

bunCount = 0;

dadCount = 0;

grillCount = 0;

dogFarmCount = 0;

facCount = 0;

bankCount = 0;

bunCost = 10;

bunRate = 0.2;

dadCost = 100;

dadRate = 2;

grillCost = 500;

grillRate = 10;

dogFarmCost = 5000;

dogFarmRate = 50;

facCost = 50000;

facRate = 500;

bankCost = 250000;

bankRate = 2500;

increment = 1.3;

passiveClicksElement = document.getElementById`passive`;

clickCountElement = document.getElementById`clickCount`;

grillCountElement = document.getElementById`grillCount`;

bunCountElement = document.getElementById`bunCount`;

dadCountElement = document.getElementById`dadCount`;

dogFarmCountElement = document.getElementById`dogFarmCount`;

facCountElement = document.getElementById`dogFacCount`;

bankCountElement = document.getElementById`dogBankCount`;

hotdogButton = document.getElementById`hotdogButton`;

bunButton = document.getElementById`bunButton`;

dadButton = document.getElementById`dadButton`;

grillButton = document.getElementById`grillButton`;

dogFarmButton = document.getElementById`dogFarmButton`;

facButton = document.getElementById`dogFacButton`;

bankButton = document.getElementById`dogBankButton`;

bunPriceElement = document.getElementById('bunPrice');

dadPriceElement = document.getElementById('dadPrice');

grillPriceElement = document.getElementById('grillPrice');

farmPriceElement = document.getElementById('farmPrice');

facPriceElement = document.getElementById('facPrice');

bankPriceElement = document.getElementById('bankPrice');

bunImage = document.getElementById('bunImg');

dadImage = document.getElementById('dadImg');

grillImage = document.getElementById('grillImg');

farmImage = document.getElementById('farmImg');

facImage = document.getElementById('facImg');

bankImage = document.getElementById('bankImg');

checkBuyables = function() {
  if (clickCount >= bunCost) {
    if (bunImage != null) {
      bunImage.textContent = bunBuyable;
    }
  } else {
    if (bunImage != null) {
      bunImage.textContent = bunUnBuyable;
    }
    if (dadImage != null) {
      dadImage.textContent = dadUnBuyable;
    }
    if (grillImage != null) {
      grillImage.textContent = grillUnBuyable;
    }
    if (farmImage != null) {
      farmImage.textContent = farmUnBuyable;
    }
    if (facImage != null) {
      facImage.textContent = facUnBuyable;
    }
    if (bankImage != null) {
      bankImage.textContent = bankUnBuyable;
    }
    return;
  }
  if (clickCount >= dadCost) {
    if (dadImage != null) {
      dadImage.textContent = dadBuyable;
    }
  } else {
    if (dadImage != null) {
      dadImage.textContent = dadUnBuyable;
    }
    if (grillImage != null) {
      grillImage.textContent = grillUnBuyable;
    }
    if (farmImage != null) {
      farmImage.textContent = farmUnBuyable;
    }
    if (facImage != null) {
      facImage.textContent = facUnBuyable;
    }
    if (bankImage != null) {
      bankImage.textContent = bankUnBuyable;
    }
    return;
  }
  if (clickCount >= grillCost) {
    if (grillImage != null) {
      grillImage.textContent = grillBuyable;
    }
  } else {
    if (grillImage != null) {
      grillImage.textContent = grillUnBuyable;
    }
    if (farmImage != null) {
      farmImage.textContent = farmUnBuyable;
    }
    if (facImage != null) {
      facImage.textContent = facUnBuyable;
    }
    if (bankImage != null) {
      bankImage.textContent = bankUnBuyable;
    }
    return;
  }
  if (clickCount >= dogFarmCost) {
    if (farmImage != null) {
      farmImage.textContent = farmBuyable;
    }
  } else {
    if (farmImage != null) {
      farmImage.textContent = farmUnBuyable;
    }
    if (facImage != null) {
      facImage.textContent = facUnBuyable;
    }
    if (bankImage != null) {
      bankImage.textContent = bankUnBuyable;
    }
    return;
  }
  if (clickCount >= facCost) {
    if (facImage != null) {
      facImage.textContent = facBuyable;
    }
  } else {
    if (facImage != null) {
      facImage.textContent = facUnBuyable;
    }
    if (bankImage != null) {
      bankImage.textContent = bankUnBuyable;
    }
    return;
  }
  if (clickCount >= bankCost) {
    return bankImage != null ? bankImage.textContent = bankBuyable : void 0;
  } else {
    if (bankImage != null) {
      bankImage.textContent = bankUnBuyable;
    }
  }
};

if (hotdogButton != null) {
  hotdogButton.addEventListener('click', function() {
    clickCount++;
    if (clickCountElement != null) {
      clickCountElement.textContent = clickCount.toFixed(1);
    }
    return checkBuyables();
  });
}

if (bunButton != null) {
  bunButton.addEventListener('click', function() {
    if (clickCount >= bunCost) {
      clickCount -= bunCost;
      bunCost *= increment;
      checkBuyables();
      if (bunImage != null) {
        bunImage.textContent = bunBuying;
      }
      if (bunPriceElement != null) {
        bunPriceElement.textContent = bunCost.toFixed(1);
      }
      if (clickCountElement != null) {
        clickCountElement.textContent = clickCount.toFixed(1);
      }
      bunCount++;
      if (bunCountElement != null) {
        bunCountElement.textContent = bunCount;
      }
      passiveClicks += bunRate;
      if (passiveClicksElement != null) {
        passiveClicksElement.textContent = passiveClicks.toFixed(1);
      }
      return bun != null ? bun.play() : void 0;
    }
  });
}

if (dadButton != null) {
  dadButton.addEventListener('click', function() {
    if (clickCount >= dadCost) {
      clickCount -= dadCost;
      dadCost *= increment;
      checkBuyables();
      if (dadImage != null) {
        dadImage.textContent = dadBuying;
      }
      if (dadPriceElement != null) {
        dadPriceElement.textContent = dadCost.toFixed(1);
      }
      if (clickCountElement != null) {
        clickCountElement.textContent = clickCount.toFixed(1);
      }
      dadCount++;
      if (dadCountElement != null) {
        dadCountElement.textContent = dadCount;
      }
      passiveClicks += dadRate;
      if (passiveClicksElement != null) {
        passiveClicksElement.textContent = passiveClicks.toFixed(1);
      }
      return dad != null ? dad.play() : void 0;
    }
  });
}

if (grillButton != null) {
  grillButton.addEventListener('click', function() {
    if (clickCount >= grillCost) {
      clickCount -= grillCost;
      grillCost *= increment;
      checkBuyables();
      if (grillImage != null) {
        grillImage.textContent = grillBuying;
      }
      if (grillPriceElement != null) {
        grillPriceElement.textContent = grillCost.toFixed(1);
      }
      if (clickCountElement != null) {
        clickCountElement.textContent = clickCount.toFixed(1);
      }
      grillCount++;
      if (grillCountElement != null) {
        grillCountElement.textContent = grillCount;
      }
      passiveClicks += grillRate;
      if (passiveClicksElement != null) {
        passiveClicksElement.textContent = passiveClicks.toFixed(1);
      }
      return grill != null ? grill.play() : void 0;
    }
  });
}

if (dogFarmButton != null) {
  dogFarmButton.addEventListener('click', function() {
    if (clickCount >= dogFarmCost) {
      clickCount -= dogFarmCost;
      dogFarmCost *= increment;
      checkBuyables();
      if (farmImage != null) {
        farmImage.textContent = farmBuying;
      }
      if (farmPriceElement != null) {
        farmPriceElement.textContent = dogFarmCost.toFixed(1);
      }
      if (clickCountElement != null) {
        clickCountElement.textContent = clickCount.toFixed(1);
      }
      dogFarmCount++;
      if (dogFarmCountElement != null) {
        dogFarmCountElement.textContent = dogFarmCount;
      }
      passiveClicks += dogFarmRate;
      if (passiveClicksElement != null) {
        passiveClicksElement.textContent = passiveClicks.toFixed(1);
      }
      return farm != null ? farm.play() : void 0;
    }
  });
}

if (facButton != null) {
  facButton.addEventListener('click', function() {
    if (clickCount >= facCost) {
      clickCount -= facCost;
      facCost *= increment;
      checkBuyables();
      if (facImage != null) {
        facImage.textContent = facBuying;
      }
      if (facPriceElement != null) {
        facPriceElement.textContent = facCost.toFixed(1);
      }
      if (clickCountElement != null) {
        clickCountElement.textContent = clickCount.toFixed(1);
      }
      facCount++;
      if (facCountElement != null) {
        facCountElement.textContent = facCount.toFixed(1);
      }
      passiveClicks += facRate;
      if (passiveClicksElement != null) {
        passiveClicksElement.textContent = passiveClicks.toFixed(1);
      }
      return factory != null ? factory.play() : void 0;
    }
  });
}

if (bankButton != null) {
  bankButton.addEventListener('click', function() {
    if (clickCount >= bankCost) {
      clickCount -= bankCost;
      bankCost *= increment;
      checkBuyables();
      if (bankImage != null) {
        bankImage.textContent = bankBuying;
      }
      if (bankPriceElement != null) {
        bankPriceElement.textContent = bankCost.toFixed(1);
      }
      if (clickCountElement != null) {
        clickCountElement.textContent = clickCount.toFixed(1);
      }
      bankCount++;
      if (bankCountElement != null) {
        bankCountElement.textContent = bankCount.toFixed(1);
      }
      passiveClicks += bankRate;
      if (passiveClicksElement != null) {
        passiveClicksElement.textContent = passiveClicks.toFixed(1);
      }
      return bank != null ? bank.play() : void 0;
    }
  });
}


// Upgrades
mustardCost = 5000;

tSauceCost = 1000;

crispCost = 5000;

tSauceButton = document.getElementById('tSauceButton');

mustardButton = document.getElementById('mustardButton');

crispButton = document.getElementById('crispButton');

if (tSauceButton != null) {
  tSauceButton.addEventListener('click', function() {
    if (clickCount >= tSauceCost) {
      clickCount -= tSauceCost;
      checkBuyables();
      if (clickCountElement != null) {
        clickCountElement.textContent = clickCount.toFixed(1);
      }
      if (tSauceButton != null) {
        tSauceButton.style.display = 'none';
      }
      passiveClicks += 25;
      return passiveClicksElement != null ? passiveClicksElement.textContent = passiveClicks.toFixed(1) : void 0;
    }
  });
}

if (mustardButton != null) {
  mustardButton.addEventListener('click', function() {
    if (clickCount >= mustardCost) {
      clickCount -= mustardCost;
      checkBuyables();
      if (clickCountElement != null) {
        clickCountElement.textContent = clickCount.toFixed(1);
      }
      if (mustardButton != null) {
        mustardButton.style.display = 'none';
      }
      passiveClicks += 50;
      return passiveClicksElement != null ? passiveClicksElement.textContent = passiveClicks.toFixed(1) : void 0;
    }
  });
}

if (crispButton != null) {
  crispButton.addEventListener('click', function() {
    if (clickCount >= crispCost) {
      clickCount -= crispCost;
      checkBuyables();
      if (clickCountElement != null) {
        clickCountElement.textContent = clickCount.toFixed(1);
      }
      if (crispButton != null) {
        crispButton.style.display = 'none';
      }
      return bunRate *= 2;
    }
  });
}

setInterval(function() {
  clickCount += passiveClicks;
  if (clickCountElement != null) {
    clickCountElement.textContent = clickCount.toFixed(1);
  }
  return checkBuyables();
}, 1000);
